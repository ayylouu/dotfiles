# Basic Settings
set ratios 1:2:3
set preview true
set hidden true
set drawbox true
set icons true
set ignorecase true
# preview and cleaner scripts from https://github.com/cirala/lfimg
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner

# Custom Functions
cmd open ${{
    case $(file --mime-type "$f" -bL) in
	image/gif) mpv --loop "$f" ;;
	video/*) mpv "$f" ;;
        image/*) sxiv "$f";;
        text/*|application/json) $EDITOR "$f";;
	*pdf) zathura "$f" ;;
        *) xdg-open "$f" ;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd bulk-rename ${{
  index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
  if [ -n "${fs}" ]; then
  	echo "$fs" > $index
  else
  	echo "$(ls "$(dirname $f)" | tr ' ' "\n")" > $index
  fi
  index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
  cat $index > $index_edit
  $EDITOR $index_edit
  if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
  	max=$(($(cat $index | wc -l)+1))
  	counter=1
  	while [ $counter -le $max ]; do
  		a="$(cat $index | sed "${counter}q;d")"
  		b="$(cat $index_edit | sed "${counter}q;d")"
  		counter=$(($counter+1))
  		
  		[ "$a" = "$b" ] && continue
  		[ -e "$b" ] && echo "File exists: $b" && continue
  		mv "$a" "$b"
  	done
  else
  	echo "Number of lines must stay the same"
  fi
  rm $index $index_edit
}}

cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

cmd image_preview ${{
set -e

cleanup() {
    exec 3>&-
	rm "$FIFO_UEBERZUG"
}

if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
	lf "$@"
else
	[ ! -d "$HOME/.cache/lf" ] && mkdir --parents "$HOME/.cache/lf"
	export FIFO_UEBERZUG="$HOME/.cache/lf/ueberzug-$$"
	mkfifo "$FIFO_UEBERZUG"
	ueberzug layer -s <"$FIFO_UEBERZUG" -p json &
	exec 3>"$FIFO_UEBERZUG"
	trap cleanup EXIT
	lf "$@" 3>&-
fi
}}

cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ]; then
        cmd="cd"
    else 
        cmd="select"                                                       
    fi
    lf -remote "send $id $cmd \"$res\""
}}

# Bindings
# Remove some defaults
map m
map o
map "'"
map '"'
map d
map c
map e
map f

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map mr sudomkfile
map md mkdir
map ch chmod
map r rename
map R reload
map C clear
map U unselect
map b bulk-rename
map n search-next
map u half-up
map d half-down
map <c-u> unarchive "$f"
map i image_preview
map f fzf_jump

# Mouvement
map gh cd ~ 
map g/ cd / 
map gc cd ~/.config
map gs cd ~/.scripts
map gm cd ~/Music
map gd cd ~/Documents
map gD cd ~/Downloads
map gp, cd ~/Pictures
map gpw cd ~/Pictures/wallpapers
map gpa cd ~/Pictures/art
map gv, cd ~/Videos
map gvm cd ~/Videos/movies
map gva cd ~/Videos/anime
map gr, cd ~/repositories
map grd cd ~/repositories/dotfiles
